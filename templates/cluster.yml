AWSTemplateFormatVersion: '2010-09-09'
Description: 'Cluster and ALB for factorial on Fargate'

Resources:

  ECSCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: 'factorial'

  # need an alb to listen to the world on port 80
  # and direct traffic to containers running in our 2 subnets
  LoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: 'factorial'
      Subnets:
        - !ImportValue 'Subnet1'
        - !ImportValue 'Subnet2'
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup

  LoadBalancerListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Protocol: 'HTTP'
      Port: 80
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref DefaultTargetGroup

  LoadBalancerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'security group for factorial alb'
      VpcId: !ImportValue 'VPC'
      SecurityGroupIngress:
        - CidrIp: '0.0.0.0/0'
          IpProtocol: -1

  DefaultTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Name: 'default'
      VpcId: !ImportValue 'VPC'
      Protocol: 'HTTP'
      Port: 80

  CloudWatchLogsGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: 'factorial'
      RetentionInDays: 1

  ContainerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !ImportValue 'VPC'
      GroupDescription: 'security group for containers'
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref 'LoadBalancerSecurityGroup'
          IpProtocol: -1

# output the resources we are going to need
Outputs:

  Cluster:
    Value: !Ref ECSCluster
    Export:
      Name: 'ECSCluster'

  Listener:
    Description: 'alb listener on port 80'
    Value: !Ref LoadBalancerListener
    Export:
      Name: 'Listener'

  ContainerSecurityGroup:
    Description: 'security group for containers'
    Value: !Ref ContainerSecurityGroup
    Export:
      Name: 'ContainerSecurityGroup'

  LoadBalancerDNS:
    Description: 'domain for the alb'
    Value: !GetAtt LoadBalancer.DNSName
    Export:
      Name: 'DomainName'